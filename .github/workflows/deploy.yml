name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: bilalkhan980
        password: "Pakistan@1947"

    - name: Build and push backend image
      run: |
        cd app/backend
        docker build -t bilalkhan980/scd_project-backend:latest .
        docker push bilalkhan980/scd_project-backend:latest

    - name: Build and push frontend image
      run: |
        cd app/frontend
        # List files to verify structure
        echo "Listing frontend directory structure:"
        ls -la
        echo "Listing src directory:"
        ls -la src

        # Build with verbose output
        docker build --progress=plain -t bilalkhan980/scd_project-frontend:latest .
        docker push bilalkhan980/scd_project-frontend:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Set up Minikube
      uses: medyagh/setup-minikube@master

    - name: Get Minikube status
      run: minikube status

    - name: Update Kubernetes deployment files
      run: |
        # Update image names in deployment files to use Docker Hub images
        sed -i 's|image: scd_project-backend:latest|image: bilalkhan980/scd_project-backend:latest|g' k8s/app-deployment.yaml
        sed -i 's|image: scd_project-frontend:latest|image: bilalkhan980/scd_project-frontend:latest|g' k8s/app-deployment.yaml
        sed -i 's|imagePullPolicy: Never|imagePullPolicy: Always|g' k8s/app-deployment.yaml

        # Show the changes
        cat k8s/app-deployment.yaml

    - name: Deploy to Kubernetes
      run: |
        # Create namespace
        kubectl apply -f k8s/namespace.yaml

        # Apply deployments and services
        kubectl apply -f k8s/app-deployment.yaml
        kubectl apply -f k8s/app-service.yaml

        # Wait for deployments to be ready
        kubectl -n ecommerce-app rollout status deployment/backend
        kubectl -n ecommerce-app rollout status deployment/frontend

    - name: Display service information
      run: |
        echo "Application deployed successfully!"
        echo "Backend service:"
        kubectl -n ecommerce-app get service backend
        echo "Frontend service:"
        kubectl -n ecommerce-app get service frontend

    - name: Get Minikube IP
      run: |
        echo "Minikube IP:"
        minikube ip

    - name: Get NodePort
      run: |
        echo "Frontend NodePort:"
        kubectl -n ecommerce-app get service frontend -o=jsonpath='{.spec.ports[0].nodePort}'

    - name: Access URL
      run: |
        echo "Access the application at:"
        echo "http://$(minikube ip):$(kubectl -n ecommerce-app get service frontend -o=jsonpath='{.spec.ports[0].nodePort}')"
